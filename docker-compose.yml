version: '3.9'

services:
  api:
    build: .
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
      - audio_data:/app/audio_data
    ports:
      - "8000:8000"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - WHISPER_MODEL=base
      - DEFAULT_MODEL_SIZE=base
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  celery_worker:
    build: .
    command: celery -A celery_worker.celery_app worker --loglevel=info
    volumes:
      - .:/app
      - audio_data:/app/audio_data
      - model_cache:/root/.cache  # Cache whisper models
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - WHISPER_MODEL=base
      - DEFAULT_MODEL_SIZE=base
      - WHISPER_DOWNLOAD_ROOT=/root/.cache/whisper
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

  celery_flower:
    build: .
    command: celery -A celery_worker.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - celery_worker

  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

volumes:
  audio_data:  # Volume for uploaded audio files
  model_cache:  # Volume for caching whisper models
  rabbitmq_data:  # Volume for RabbitMQ data
  redis_data:  # Volume for Redis data