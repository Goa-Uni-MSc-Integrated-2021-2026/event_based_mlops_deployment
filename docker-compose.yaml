version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: app.Dockerfile
    hostname: app
    restart: always
    volumes:
      - .:/app/
    ports:
      - 8000:8000
    env_file:
      - .env
    networks:
      - stable_diffusion
    depends_on:
      # - db
      - redis
      - worker
      - rabbitmq
      - mongodb
      # - logstash
      # - elasticsearch
  
  worker:
    build:
      context: .
      dockerfile: worker.Dockerfile
    hostname: worker
    restart: always
    volumes: 
      - .:/app/
    command: celery -A tasks worker --loglevel=INFO
    env_file:
      - .env
    networks:
      - stable_diffusion
    depends_on:
      # - db
      - redis
      - rabbitmq
  
  flower:
    build:
      context: .
      dockerfile: worker.Dockerfile
    hostname: flower
    restart: always
    volumes: 
      - .:/app/
    ports:
      - 5555:5555
    command: celery -A tasks flower --port=5555
    env_file:
      - .env
    networks:
      - stable_diffusion
    depends_on:
      # - db
      - redis
      - rabbitmq
  
  # db:
  #   image: mysql:8.0.31
  #   hostname: db
  #   restart: always
  #   volumes:
  #     - .dbdata:/var/lib/mysql
  #   ports:
  #     - 3306:3306
  #   env_file:
  #     - .env
  #   networks:
  #     - stable_diffusion
  
  redis:
    image: redis:7.0.5
    hostname: redis
    restart: always
    volumes:
      - .redisdata:/data
    ports:
      - 6379:6379
    networks:
      - stable_diffusion
  
  mongodb:
    image: mongo:6.0.2
    hostname: mongo
    restart: always
    volumes:
      - .mongodbdata:/data/db
    ports:
      - 27017:27017
    networks:
      - stable_diffusion
  
  rabbitmq:
    image: rabbitmq:3.8-management
    hostname: rabbit
    restart: always
    volumes:
      - .rabbitmqdata/data/:/var/lib/rabbitmq/
      - .rabbitmqdata/log/:/var/log/rabbitmq
    ports:
      - 5672:5672 # AMQP connection
      - 15672:15672 # HTTP connection
      # - 15692 # HTTP prometheus connection
      # - 25672 # Clustering connection
    env_file:
      - .env
    networks:
      - stable_diffusion
  
  # elasticsearch:
  #   image: elasticsearch:8.4.3
  #   hostname: elasticsearch
  #   restart: always
  #   ports:
  #     - 9200:9200
  #   environment:
  #     - discovery.type=single-node
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   networks:
  #     - stable_diffusion
  
  # kibana:
  #   image: kibana:8.4.3
  #   hostname: kibana
  #   restart: always
  #   ports:
  #     - 5601:5601
  #   networks:
  #     - stable_diffusion
  #   depends_on:
  #     - elasticsearch
  
  # logstash:
  #   image: logstash:8.4.3
  #   hostname: logstash
  #   restart: always
  #   volumes:
  #     - type: bind
  #       source: ./logstash_pipeline/
  #       target: /usr/share/logstash/pipeline
  #       read_only: true
  #   ports:
  #     - 5959
  #   networks:
  #     - stable_diffusion
  #   depends_on:
  #     - elasticsearch

  nginx:
    image: nginx:1.23.1
    hostname: server
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:80 # HTTP
      # - 8088:443 # HTTPS
    depends_on:
      - app
      - flower
      - rabbitmq

networks:
  stable_diffusion:
    driver: bridge
