version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: app.Dockerfile
    volumes:
      - .:/app/
    ports:
      - 8888:8000
    env_file:
      - .env
    networks:
      - stable_diffusion
    depends_on:
      - db
      - redis
      - worker
      - rabbitmq
      - mongodb
  
  worker:
    build:
      context: .
      dockerfile: worker.Dockerfile
    volumes: 
      - .:/app/
    ports:
      - 8080:8000
    env_file:
      - .env
    networks:
      - stable_diffusion
    depends_on:
      - db
      - redis
      - rabbitmq
  
  db:
    image: mysql
    restart: always
    volumes:
      - .dbdata:/var/lib/mysql
    ports:
      - 3306:3306
    env_file:
      - .env
    networks:
      - stable_diffusion
  
  redis:
    image: redis
    restart: always
    volumes:
      - .redisdata:/data
    ports:
      - 6379:6379
    networks:
      - stable_diffusion
  
  mongodb:
    image: mongo
    restart: always
    volumes:
      - .mongodbdata:/data/db
    ports:
      - 27017:27017
    networks:
      - stable_diffusion
  
  rabbitmq:
    image: rabbitmq:3.8-management
    hostname: rabbit
    restart: always
    volumes:
      - .rabbitmqdata/data/:/var/lib/rabbitmq/
      - .rabbitmqdata/log/:/var/log/rabbitmq
    ports:
      - 5672 # AMQP connection
      - 15672:15672 # HTTP connection
      # - 15692 # HTTP prometheus connection
      # - 25672 # Clustering connection
    env_file:
      - .env
    networks:
      - stable_diffusion

networks:
  stable_diffusion:
    driver: bridge
